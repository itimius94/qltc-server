{"version":3,"sources":["configs/index.js","components/Spending/index.js","components/Earning/index.js","components/Income/index.js","components/ReportChart/index.js","pages/HomePage/index.js","components/ListCategory/index.js","components/AddCategory/index.js","pages/Categories/index.js","components/ListSpending/index.js","components/ListEarning/index.js","components/ReportSpending/index.js","pages/Report/index.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","Spending","props","useState","categoryId","setCategoryId","price","setPrice","date","setDate","alert","useAlert","listItems","className","onSubmit","e","preventDefault","axios","post","category_id","then","res","show","type","error","value","onChange","target","placeholder","Earning","moment","format","Income","isShow","setIsShow","useEffect","get","data","length","toString","replace","ReportChart","dataSpending","setDataSpending","dataEarning","setDataEarning","listCategory","spending","earning","getDatasets","map","item","index","color","Math","floor","random","forEach","dataItem","push","label","name","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","labels","result","i","subtract","reverse","getLabels","datasets","options","tooltips","callbacks","tooltipItem","datasetIndex","HomePage","setListCategory","fetchListCategory","key","_id","id","ListCategory","width","AddCategory","setName","toogleAddCategory","handleSubmit","handleChange","Category","showAddCategory","setShowAddCategory","onClick","ListSpending","listSpending","setListSpending","fetchListSpending","page","limit","current","find","getCategory","listItemsEmpty","colSpan","renderPagination","totalPages","currentPage","aria-label","aria-hidden","ListEarning","listEarning","setListEarning","fetchListEarning","renderListItem","renderEmpty","ReportSpending","currentYear","year","currentMonth","month","prices","colors","hoverBackgroundColor","legend","position","Report","setMonth","positions","BOTTOM_CENTER","timeout","offset","transition","transitions","FADE","App","template","AlertTemplate","href","to","exact","activeClassName","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.3500d28d.chunk.js","sourcesContent":["export const API_URL = 'https://qltc-api.herokuapp.com/'","import React, { useState } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport axios from \"axios\";\n\nimport { API_URL } from \"../../configs\";\n\nexport default function Spending(props) {\n  const [categoryId, setCategoryId] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const alert = useAlert();\n\n  const { listItems } = props;\n\n  const handleChangeDate = (e) => {\n    setDate(e.target.value);\n  };\n\n  const handleChangeCategory = (e) => {\n    setCategoryId(e.target.value);\n  };\n\n  const handleChangePrice = (e) => {\n    setPrice(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!date || !price || !categoryId) {\n      alert.show(\"Bạn phải nhập chính xác thông tin\", {\n        type: \"error\",\n      });\n\n      return;\n    }\n\n    try {\n      axios\n        .post(`${API_URL}/spending`, {\n          date: date,\n          price: price,\n          category_id: categoryId,\n        })\n        .then((res) => {\n          setPrice(\"\");\n          setCategoryId(\"\");\n          setDate(\"\");\n          alert.show(\"Thêm thành công!\", {\n            type: \"success\",\n          });\n        });\n    } catch (error) {}\n  };\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3\">\n        <h6 className=\"m-0 font-weight-bold text-success\">Thêm khoản chi</h6>\n      </div>\n      <div className=\"card-body\">\n        <form className=\"user\" onSubmit={handleSubmit}>\n          <div className=\"form-group row\">\n            <div className=\"col-sm-6 mb-3 mb-sm-0\">\n              <select\n                className=\"form-control form-control-user--select text-capitalize\"\n                value={categoryId}\n                onChange={handleChangeCategory}\n              >\n                {listItems}\n              </select>\n            </div>\n            <div className=\"col-sm-6\">\n              <input\n                type=\"number\"\n                className=\"form-control form-control-user\"\n                placeholder=\"Số tiền VND\"\n                value={price}\n                onChange={handleChangePrice}\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"date\"\n              className=\"form-control form-control-user\"\n              placeholder=\"Chọn ngày\"\n              value={date}\n              onChange={handleChangeDate}\n            />\n          </div>\n          <button className=\"btn btn-success btn-user btn-block\" type=\"submit\">\n            Chi\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nimport { API_URL } from \"../../configs\";\n\nexport default function Earning() {\n  const [price, setPrice] = useState(\"\");\n  const alert = useAlert();\n\n  const handleChange = (e) => {\n    setPrice(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!price) {\n      alert.show(\"Bạn phải nhập đủ thông tin\", {\n        type: \"error\",\n      });\n      return;\n    }\n\n    try {\n      axios\n        .post(`${API_URL}/earning`, {\n          date: moment().format(\"YYYY-MM-DD\"),\n          price: price,\n        })\n        .then((res) => {\n          setPrice(\"\");\n          alert.show(\"Thêm thành công!\", {\n            type: \"success\",\n          });\n        });\n    } catch (error) {}\n  };\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3\">\n        <h6 className=\"m-0 font-weight-bold text-success\">Thêm khoản thu</h6>\n      </div>\n      <div className=\"card-body\">\n        <form className=\"user\" onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <input\n              type=\"number\"\n              className=\"form-control form-control-user\"\n              placeholder=\"Số tiền VND\"\n              value={price}\n              onChange={handleChange}\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-success btn-user btn-block\">\n            Thêm\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport axios from \"axios\";\n\nimport { API_URL } from \"../../configs\";\n\nexport default function Income() {\n  const [price, setPrice] = useState(0);\n  const [isShow, setIsShow] = useState(false);\n\n  const alert = useAlert()\n\n  useEffect(() => {\n    axios.get(`${API_URL}/common`).then((res) => {\n      if (res.data.length) {\n        setPrice(res.data[0].price);\n      } else {\n        setIsShow(true)\n      }\n    });\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!price) {\n      alert.show(\"Bạn phải nhập đủ thông tin\", {\n        type: \"error\",\n      });\n      return;\n    }\n\n    try {\n      axios\n        .post(`${API_URL}/common`, {\n          price: price,\n        })\n        .then((res) => {\n          setPrice(\"\");\n          setIsShow(false)\n          alert.show(\"Thêm thành công!\", {\n            type: \"success\",\n          });\n        });\n    } catch (error) {}\n  };\n\n  const handleChange = (e) => {\n    setPrice(e.target.value);\n  };\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n        <h6 className=\"m-0 font-weight-bold text-primary\">\n          Thu nhập hàng tháng\n        </h6>\n      </div>\n\n      <div className=\"card-body\">\n        {isShow && (\n          <form className=\"user\" onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <input\n                type=\"number\"\n                className=\"form-control form-control-user\"\n                placeholder=\"Số tiền VND\"\n                value={price}\n                onChange={handleChange}\n              />\n            </div>\n            <button\n              type=\"submit\"\n              className=\"btn btn-success btn-user btn-block\"\n            >\n              Thêm\n            </button>\n          </form>\n        )}\n\n        {!isShow &&\n          `${price.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\")} VND`}\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nimport { API_URL } from \"../../configs\";\n\nexport default function ReportChart(props) {\n  const [dataSpending, setDataSpending] = useState([]);\n  const [dataEarning, setDataEarning] = useState([]);\n  const { listCategory } = props;\n\n  useEffect(() => {\n    axios.get(`${API_URL}/report`).then((res) => {\n      setDataSpending(res.data.spending);\n      setDataEarning(res.data.earning);\n    });\n  }, []);\n\n  const getDatasets = listCategory.map((item, index) => {\n    const color = `rgb(${Math.floor(Math.random() * 255)}, ${Math.floor(\n      Math.random() * 255\n    )}, ${Math.floor(Math.random() * 255)})`;\n    let data = [];\n\n    dataSpending.forEach((dataItem) => {\n      data.push(dataItem[index].price);\n    });\n\n    return {\n      label: item.name,\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: color,\n      borderColor: color,\n      borderCapStyle: \"butt\",\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: \"miter\",\n      pointBorderColor: color,\n      pointBackgroundColor: \"#fff\",\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: color,\n      pointHoverBorderColor: color,\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: data,\n    };\n  });\n\n  const getLabels = () => {\n    let result = [];\n    for (let i = 0; i < 3; i++) {\n      result.push(moment().subtract(i, \"month\").format(\"MMMM\"));\n    }\n\n    return result.reverse();\n  };\n\n  const data = {\n    labels: getLabels(),\n    datasets: [\n      ...getDatasets,\n      {\n        label: 'Tiền thêm vào',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: dataEarning\n      }\n    ],\n  };\n\n  let options = {\n    tooltips: {\n      callbacks: {\n        label: (tooltipItem, data) => {\n          let price =\n            data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          return ` ${price\n            .toString()\n            .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\")} VND`;\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n        <h6 className=\"m-0 font-weight-bold text-primary\">Thống kê</h6>\n      </div>\n      <div className=\"card-body\">\n        <Line data={data} options={options} />\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport Spending from \"../../components/Spending\";\nimport Earning from \"../../components/Earning\";\nimport Income from \"../../components/Income\";\nimport ReportChart from \"../../components/ReportChart\";\n\nimport { API_URL } from \"../../configs\";\n\nexport default function HomePage() {\n  const [listCategory, setListCategory] = useState([]);\n\n  useEffect(() => {\n    fetchListCategory();\n  }, []);\n\n  const fetchListCategory = () => {\n    try {\n      axios.get(`${API_URL}/category`).then((res) => {\n        setListCategory(res.data);\n      });\n    } catch (error) {}\n  };\n\n  const listItems = listCategory.map((item, index) => (\n    <option key={index} value={item._id}>\n      {item.name}\n    </option>\n  ));\n\n  return (\n    <div id=\"content\">\n      <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n        <h1 className=\"h3 mb-0 text-gray-800\">Trang chủ</h1>\n      </nav>\n\n      <div className=\"container-fluid\">\n        {/* <div className=\"row\">\n          <div className=\"col-xl-3 col-md-6 mb-4\">\n            <div className=\"card border-left-primary shadow h-100 py-2\">\n              <div className=\"card-body\">\n                <div className=\"row no-gutters align-items-center\">\n                  <div className=\"col mr-2\">\n                    <div className=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\n                      Earnings (Monthly)\n                    </div>\n                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">\n                      $40,000\n                    </div>\n                  </div>\n                  <div className=\"col-auto\">\n                    <i className=\"fas fa-calendar fa-2x text-gray-300\"></i>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-xl-3 col-md-6 mb-4\">\n            <div className=\"card border-left-success shadow h-100 py-2\">\n              <div className=\"card-body\">\n                <div className=\"row no-gutters align-items-center\">\n                  <div className=\"col mr-2\">\n                    <div className=\"text-xs font-weight-bold text-success text-uppercase mb-1\">\n                      Earnings (Annual)\n                    </div>\n                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">\n                      $215,000\n                    </div>\n                  </div>\n                  <div className=\"col-auto\">\n                    <i className=\"fas fa-dollar-sign fa-2x text-gray-300\"></i>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-xl-3 col-md-6 mb-4\">\n            <div className=\"card border-left-info shadow h-100 py-2\">\n              <div className=\"card-body\">\n                <div className=\"row no-gutters align-items-center\">\n                  <div className=\"col mr-2\">\n                    <div className=\"text-xs font-weight-bold text-info text-uppercase mb-1\">\n                      Tasks\n                    </div>\n                    <div className=\"row no-gutters align-items-center\">\n                      <div className=\"col-auto\">\n                        <div className=\"h5 mb-0 mr-3 font-weight-bold text-gray-800\">\n                          50%\n                        </div>\n                      </div>\n                      <div className=\"col\">\n                        <div className=\"progress progress-sm mr-2\">\n                          <div\n                            className=\"progress-bar bg-info\"\n                            role=\"progressbar\"\n                            // style=\"width: 50%\"\n                            aria-valuenow=\"50\"\n                            aria-valuemin=\"0\"\n                            aria-valuemax=\"100\"\n                          ></div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-auto\">\n                    <i className=\"fas fa-clipboard-list fa-2x text-gray-300\"></i>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-xl-3 col-md-6 mb-4\">\n            <div className=\"card border-left-warning shadow h-100 py-2\">\n              <div className=\"card-body\">\n                <div className=\"row no-gutters align-items-center\">\n                  <div className=\"col mr-2\">\n                    <div className=\"text-xs font-weight-bold text-warning text-uppercase mb-1\">\n                      Pending Requests\n                    </div>\n                    <div className=\"h5 mb-0 font-weight-bold text-gray-800\">\n                      18\n                    </div>\n                  </div>\n                  <div className=\"col-auto\">\n                    <i className=\"fas fa-comments fa-2x text-gray-300\"></i>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div> */}\n\n        <div className=\"row\">\n          <div className=\"col-xl-8 col-lg-7\">\n            <ReportChart listCategory={listCategory} />\n          </div>\n\n          <div className=\"col-xl-4 col-lg-5\">\n            <Income />\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-lg-6 mb-4\">\n            <Earning />\n          </div>\n\n          <div className=\"col-lg-6 mb-4\">\n            <Spending listItems={listItems} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function ListCategory(props) {\n  const { listCategory } = props;\n\n  const listItems = listCategory.map((item, index) => (\n    <tr key={index}>\n      <td>{index + 1}</td>\n      <td className=\"text-capitalize\">{item.name}</td>\n    </tr>\n  ));\n\n  return (\n    <div className=\"table-responsive\">\n      <table\n        className=\"table table-bordered\"\n        id=\"dataTable\"\n        width=\"100%\"\n      >\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th className=\"text-center\">Tên danh mục</th>\n          </tr>\n        </thead>\n        <tbody>{listItems}</tbody>\n      </table>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport axios from \"axios\";\n\nimport { API_URL } from \"../../configs\";\n\nexport default function AddCategory(props) {\n  const [name, setName] = useState(\"\");\n  const alert = useAlert();\n  const { toogleAddCategory } = props;\n\n  const handleChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!name) {\n      alert.show(\"Tên danh mục không được trống\", {\n        type: \"error\",\n      });\n\n      return;\n    }\n\n    try {\n      axios\n        .post(`${API_URL}/category`, {\n          name: name,\n        })\n        .then(() => {\n          alert.show(\"Thêm thành công!\", {\n            type: \"success\",\n          });\n          toogleAddCategory();\n        });\n    } catch (error) {}\n  };\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3\">\n        <h6 className=\"m-0 font-weight-bold text-success\">Thêm danh mục</h6>\n      </div>\n      <div className=\"card-body\">\n        <form className=\"user\" onSubmit={(e) => handleSubmit(e)}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control form-control-user\"\n              placeholder=\"Tên danh mục\"\n              value={name}\n              onChange={(e) => handleChange(e)}\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-success btn-user btn-block\">\n            Thêm mới\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport ListCategory from \"../../components/ListCategory\";\nimport AddCategory from \"../../components/AddCategory\";\n\nimport { API_URL } from '../../configs'\n\nexport default function Category(props) {\n  const [showAddCategory, setShowAddCategory] = useState(false);\n  const [listCategory, setListCategory] = useState([]);\n\n  useEffect(() => {\n    fetchListCategory()\n  }, []);\n\n  const fetchListCategory = () => {\n    try {\n      axios.get(`${API_URL}/category`).then((res) => {\n        setListCategory(res.data);\n      });\n    } catch (error) {}\n  }\n\n  const toogleAddCategory = () => {\n    if (showAddCategory) {\n      fetchListCategory()\n    }\n\n    setShowAddCategory(!showAddCategory);\n  };\n\n  return (\n    <div id=\"content\">\n      <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n        <h1 className=\"h3 mb-0 text-gray-800\">Quản lý danh mục</h1>\n      </nav>\n\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-lg-6 mb-4\">\n            <div className=\"card shadow mb-4\">\n              <div className=\"card-header py-3\">\n                <h6 className=\"m-0 font-weight-bold text-success\">\n                  List danh mục\n                </h6>\n              </div>\n              <div className=\"card-body\">\n                <ListCategory listCategory={listCategory} />\n                {!showAddCategory && (\n                  <button\n                    className=\"btn btn-success btn-block\"\n                    onClick={() => toogleAddCategory()}\n                  >\n                    Thêm danh mục mới\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-lg-6 mb-4\">\n            {showAddCategory && (\n              <AddCategory toogleAddCategory={() => toogleAddCategory()} />\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport { API_URL } from \"../../configs\";\n\nexport default function ListSpending() {\n  const [listSpending, setListSpending] = useState({});\n  const [listCategory, setListCategory] = useState([]);\n\n  useEffect(() => {\n    fetchListSpending();\n    fetchListCategory();\n  }, []);\n\n  const fetchListCategory = () => {\n    try {\n      axios.get(`${API_URL}/category`).then((res) => {\n        setListCategory(res.data);\n      });\n    } catch (error) {}\n  };\n\n  const fetchListSpending = (page = 1, limit = 5) => {\n    try {\n      axios\n        .get(`${API_URL}/spending?page=${page}&limit=${limit}`)\n        .then((res) => {\n          setListSpending(res.data);\n        });\n    } catch (error) {}\n  };\n\n  const getCategory = (id) => {\n    const current = listCategory.find((item) => item._id === id);\n\n    if (current) return current.name;\n  };\n\n  const listItems =\n    listSpending.data &&\n    listSpending.data.map((item, index) => (\n      <tr key={index}>\n        <td>{index + 1}</td>\n        <td>\n          {item.price.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\")} VND\n        </td>\n        <td>{item.date}</td>\n        <td className=\"text-capitalize\">{getCategory(item.category_id)}</td>\n      </tr>\n    ));\n\n  const listItemsEmpty = (\n    <tr>\n      <td colSpan=\"4\" className=\"text-center\">\n        Chưa có chi tiêu nào\n      </td>\n    </tr>\n  );\n\n  const renderPagination = [];\n  if (listSpending.totalPages) {\n    for (let i = 1; i <= listSpending.totalPages; i++) {\n      renderPagination.push(\n        <li\n          key={i}\n          className={`page-item ${\n            i === listSpending.currentPage ? \"active\" : \"\"\n          }`}\n        >\n          <button className=\"page-link\" onClick={() => fetchListSpending(i)}>\n            {i}\n          </button>\n        </li>\n      );\n    }\n  }\n\n  return (\n    <div className=\"table-responsive\">\n      <table className=\"table table-bordered\" width=\"100%\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th className=\"text-center\">Số tiền</th>\n            <th className=\"text-center\">Ngày chi</th>\n            <th className=\"text-center\">Danh mục</th>\n          </tr>\n        </thead>\n        <tbody>{listSpending.data ? listItems : listItemsEmpty}</tbody>\n      </table>\n\n      <nav aria-label=\"Page navigation example\" className=\"text-center\">\n        <ul className=\"pagination\">\n          <li className=\"page-item\">\n            <button\n              className=\"page-link\"\n              aria-label=\"Previous\"\n              onClick={() =>\n                listSpending.currentPage > 1\n                  ? fetchListSpending(listSpending.currentPage - 1)\n                  : {}\n              }\n            >\n              <span aria-hidden=\"true\">&laquo;</span>\n              <span className=\"sr-only\">Previous</span>\n            </button>\n          </li>\n          {renderPagination}\n          <li className=\"page-item\">\n            <button\n              className=\"page-link\"\n              aria-label=\"Next\"\n              onClick={() =>\n                listSpending.totalPages > listSpending.currentPage\n                  ? fetchListSpending(listSpending.currentPage + 1)\n                  : {}\n              }\n            >\n              <span aria-hidden=\"true\">&raquo;</span>\n              <span className=\"sr-only\">Next</span>\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport { API_URL } from \"../../configs\";\n\nexport default function ListEarning() {\n  const [listEarning, setListEarning] = useState({});\n\n  useEffect(() => {\n    fetchListEarning();\n  }, []);\n\n  const fetchListEarning = (page = 1, limit = 5) => {\n    try {\n      axios\n        .get(`${API_URL}/earning?page=${page}&limit=${limit}`)\n        .then((res) => {\n          setListEarning(res.data);\n        });\n    } catch (error) {}\n  };\n\n  const renderListItem =\n    listEarning.data &&\n    listEarning.data.map((item, index) => (\n      <tr key={index}>\n        <td>{index + 1}</td>\n        <td>\n          {item.price.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\")} VND\n        </td>\n        <td>{item.date}</td>\n      </tr>\n    ));\n\n  const renderEmpty = (\n    <tr>\n      <td colSpan=\"4\" className=\"text-center\">\n        Chưa có chi tiêu nào\n      </td>\n    </tr>\n  );\n\n  const renderPagination = [];\n  if (listEarning.totalPages) {\n    for (let i = 1; i <= listEarning.totalPages; i++) {\n      renderPagination.push(\n        <li\n          key={i}\n          className={`page-item ${\n            i === listEarning.currentPage ? \"active\" : \"\"\n          }`}\n        >\n          <button className=\"page-link\" onClick={() => fetchListEarning(i)}>\n            {i}\n          </button>\n        </li>\n      );\n    }\n  }\n\n  return (\n    <div className=\"table-responsive\">\n      <table className=\"table table-bordered\" width=\"100%\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th className=\"text-center\">Số tiền</th>\n            <th className=\"text-center\">Ngày thêm</th>\n          </tr>\n        </thead>\n        <tbody>{listEarning.data ? renderListItem : renderEmpty}</tbody>\n      </table>\n\n      <nav aria-label=\"Page navigation example\" className=\"text-center\">\n        <ul className=\"pagination\">\n          <li className=\"page-item\">\n            <button\n              className=\"page-link\"\n              aria-label=\"Previous\"\n              onClick={() =>\n                listEarning.currentPage > 1\n                  ? fetchListEarning(listEarning.currentPage - 1)\n                  : {}\n              }\n            >\n              <span aria-hidden=\"true\">&laquo;</span>\n              <span className=\"sr-only\">Previous</span>\n            </button>\n          </li>\n          {renderPagination}\n          <li className=\"page-item\">\n            <button\n              className=\"page-link\"\n              aria-label=\"Next\"\n              onClick={() =>\n                listEarning.totalPages > listEarning.currentPage\n                  ? fetchListEarning(listEarning.currentPage + 1)\n                  : {}\n              }\n            >\n              <span aria-hidden=\"true\">&raquo;</span>\n              <span className=\"sr-only\">Next</span>\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nimport { API_URL } from \"../../configs\";\n\nexport default function ReportSpending(props) {\n  const { listCategory, date } = props;\n  const [dataSpending, setDataSpending] = useState([]);\n  let currentYear = moment(date).year();\n  let currentMonth = moment(date).month();\n\n  useEffect(() => {\n    axios\n      .get(\n        `${API_URL}/report/spending?year=${currentYear}&month=${\n          currentMonth + 1\n        }`\n      )\n      .then((res) => {\n        setDataSpending(res.data);\n      });\n  }, [date]);\n\n  const getName = (id) => {\n    if (!listCategory.length) return \"\";\n\n    const current = listCategory.find((item) => item._id === id);\n\n    return current.name;\n  };\n\n  let labels = dataSpending.map((item) => getName(item.category_id));\n  let prices = dataSpending.map((item) => item.price);\n  let colors = dataSpending.map((item) => item.color);\n  let data = {\n    labels: labels,\n    datasets: [\n      {\n        data: prices,\n        backgroundColor: colors,\n        hoverBackgroundColor: colors,\n      },\n    ],\n  };\n  let options = {\n    legend: {\n      position: \"right\",\n    },\n    tooltips: {\n      callbacks: {\n        label: (tooltipItem, data) => {\n          let price =\n            data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          return ` ${price\n            .toString()\n            .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\")} VND`;\n        },\n      },\n    },\n  };\n\n  return (\n    <div>\n      {dataSpending.length ? (\n        <Doughnut data={data} options={options} />\n      ) : (\n        <div>Không có dữ liệu thống kê</div>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nimport ListSpending from \"../../components/ListSpending\";\nimport ListEarning from \"../../components/ListEarning\";\nimport ReportSpending from \"../../components/ReportSpending\";\n\nimport { API_URL } from \"../../configs\";\n\nexport default function Report() {\n  const [listCategory, setListCategory] = useState([]);\n  const [month, setMonth] = useState(moment().format(\"YYYY-MM\"));\n\n  useEffect(() => {\n    fetchListCategory();\n  }, []);\n\n  const fetchListCategory = () => {\n    try {\n      axios.get(`${API_URL}/category`).then((res) => {\n        setListCategory(res.data);\n      });\n    } catch (error) {}\n  };\n\n  const handleChangeDate = (e) => {\n    setMonth(e.target.value);\n  };\n\n  return (\n    <div id=\"content\">\n      <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n        <h1 className=\"h3 mb-0 text-gray-800\">Trang chủ</h1>\n      </nav>\n\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-xl-8 col-lg-7\">\n            <div className=\"card shadow mb-4\">\n              <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                <h6 className=\"m-0 font-weight-bold text-primary\">\n                  Báo cáo chi tiêu\n                </h6>\n\n                <div>\n                  <input\n                    type=\"month\"\n                    className=\"form-control\"\n                    placeholder=\"Chọn tháng\"\n                    value={month}\n                    onChange={handleChangeDate}\n                  />\n                </div>\n              </div>\n              <div className=\"card-body\">\n                <ReportSpending listCategory={listCategory} date={month} />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-xl-4 col-lg-5\"></div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-lg-6 mb-4\">\n            <div className=\"card shadow mb-4\">\n              <div className=\"card-header py-3\">\n                <h6 className=\"m-0 font-weight-bold text-success\">\n                  Danh sách chi\n                </h6>\n              </div>\n              <div className=\"card-body\">\n                <ListSpending />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-lg-6 mb-4\">\n            <div className=\"card shadow mb-4\">\n              <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n                <h6 className=\"m-0 font-weight-bold text-primary\">\n                  Danh sách thêm\n                </h6>\n              </div>\n\n              <div className=\"card-body\">\n                <ListEarning />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink\n} from \"react-router-dom\";\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\n\nimport HomePage from './pages/HomePage'\nimport Categories from './pages/Categories'\nimport Report from './pages/Report'\n\n// optional configuration\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.BOTTOM_CENTER,\n  timeout: 3000,\n  offset: '30px',\n  // you can also just use 'scale'\n  transition: transitions.FADE\n}\n\nfunction App() {\n  return (\n    <AlertProvider template={AlertTemplate} {...options}>\n      <Router>\n        <div id=\"wrapper\">\n          <ul className=\"navbar-nav bg-gradient-success sidebar sidebar-dark accordion\">\n            <a\n              className=\"sidebar-brand d-flex align-items-center justify-content-center\"\n              href=\"index.html\"\n            >\n              <div className=\"sidebar-brand-icon rotate-n-15\">\n                <i className=\"fa fa-money\" aria-hidden=\"true\"/>\n              </div>\n              <div className=\"sidebar-brand-text mx-3\">\n                Money.<sub>Me</sub>\n              </div>\n            </a>\n\n            <hr className=\"sidebar-divider my-0\" />\n            <li className=\"nav-item\">\n              <NavLink to=\"/\" exact activeClassName=\"active\" className=\"nav-link\">\n                <i className=\"fa fa-tachometer\" aria-hidden=\"true\" />\n                <span>Trang chủ</span>\n              </NavLink>\n            </li>\n\n            <hr className=\"sidebar-divider\" />\n            <li className=\"nav-item\">\n              <NavLink to=\"/categories\" activeClassName=\"active\" className=\"nav-link\">\n                <i className=\"fa fa-folder-o\" aria-hidden=\"true\" />\n                <span>Quản lý danh mục</span>\n              </NavLink>\n            </li>\n\n            <hr className=\"sidebar-divider\" />\n            <li className=\"nav-item\">\n              <NavLink to=\"/report\" activeClassName=\"active\" className=\"nav-link\">\n                <i className=\"fa fa-bar-chart\" aria-hidden=\"true\" />\n                <span>Báo cáo</span>\n              </NavLink>\n            </li>\n          </ul>\n\n          <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n            <Switch>\n              <Route exact path=\"/\">\n                <HomePage />\n              </Route>\n              <Route path=\"/categories\">\n                <Categories />\n              </Route>\n              <Route path=\"/report\">\n                <Report />\n              </Route>\n            </Switch>\n\n            <footer className=\"sticky-footer bg-white\">\n              <div className=\"container my-auto\">\n                <div className=\"copyright text-center my-auto\">\n                  <span>Copyright &copy; Your Website 2020</span>\n                </div>\n              </div>\n            </footer>\n          </div>\n        </div>\n\n        <a className=\"scroll-to-top rounded\" href=\"#page-top\">\n          <i className=\"fas fa-angle-up\"></i>\n        </a>\n      </Router>\n    </AlertProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}